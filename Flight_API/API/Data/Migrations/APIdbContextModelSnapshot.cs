// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Data.Migrations
{
    [DbContext(typeof(APIdbContext))]
    partial class APIdbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("API.Models.FlightObject", b =>
                {
                    b.Property<Guid>("FlightID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("FlightNo")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Gate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<DateTime>("Time_Des")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Time_Ori")
                        .HasColumnType("datetime(6)");

                    b.HasKey("FlightID");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            FlightID = new Guid("b7d6a643-b638-49ce-a9a4-5c0f58aa6e08"),
                            Capacity = 150,
                            Destination = "TSA",
                            FlightNo = "AYE35",
                            Gate = "",
                            Origin = "DUL",
                            TimeDes = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TimeOri = new DateTime(2023, 12, 14, 16, 6, 46, 852, DateTimeKind.Local).AddTicks(8740)
                        },
                        new
                        {
                            FlightID = new Guid("cb4b7ea6-ef3a-4340-a46a-a41e8441058f"),
                            Capacity = 180,
                            Destination = "DUL",
                            FlightNo = "EYA23",
                            Gate = "",
                            Origin = "TSA",
                            TimeDes = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TimeOri = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("API.Models.PassengerFlight_Mapping", b =>
                {
                    b.Property<Guid>("FlightID")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PassengerID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("BookingTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("FlightID", "PassengerID");

                    b.HasIndex("PassengerID");

                    b.ToTable("PassengerFlightMappings");
                });

            modelBuilder.Entity("API.Models.PassengerObject", b =>
                {
                    b.Property<Guid>("Passenger_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("varchar(24)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("varchar(24)");

                    b.HasKey("Passenger_ID");

                    b.ToTable("Passengers");

                    b.HasData(
                        new
                        {
                            PassengerID = new Guid("74ac97a5-df82-4a74-8d41-35324a4c00c7"),
                            Email = "abc@gmail.com",
                            FirstName = "Tuan",
                            LastName = "Vo"
                        },
                        new
                        {
                            PassengerID = new Guid("3009d2b7-2941-46d6-920e-1e3a6e769436"),
                            Email = "cba@gmail.com",
                            FirstName = "Chi",
                            LastName = "Le"
                        });
                });

            modelBuilder.Entity("API.Models.PassengerFlight_Mapping", b =>
                {
                    b.HasOne("API.Models.FlightObject", "Flight")
                        .WithMany("PassengerFlightMapper")
                        .HasForeignKey("FlightID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.PassengerObject", "Passenger")
                        .WithMany("PassengerFlightMapper")
                        .HasForeignKey("PassengerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("Passenger");
                });

            modelBuilder.Entity("API.Models.FlightObject", b =>
                {
                    b.Navigation("PassengerFlightMapper");
                });

            modelBuilder.Entity("API.Models.PassengerObject", b =>
                {
                    b.Navigation("PassengerFlightMapper");
                });
#pragma warning restore 612, 618
        }
    }
}
